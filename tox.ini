[tox]
minversion = 3.18.0
skipsdist = True
skip_install = true
envlist =
  lint
  build
requires =
  # ensure git does not report dirty after each run:
  tox-extra>=0.5.0

[testenv]
description =
  build: Build `{env:CNT_NAME}:{env:TARGET_CONTAINER_TAG}` container
  podman: Build container using podman
  docker: Build container using docker
allowlist_externals =
  /bin/bash
  bash
  echo
  docker
  podman
  test
basepython = python3
commands_pre =
  /bin/bash -c "podman rmi {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG} || true"
commands =
  # --platform linux/amd64
  podman buildx build --jobs=4 {env:EXTRA_OPTS} --load . --manifest {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG}
  # running manifest exists is mandatory as this fails if no manifest is
  # created locally. If this is skipped the inspect might pull the last
  # published manifest instead of using the local one.
  podman manifest exists {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG}
  podman manifest inspect {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG}
  # push only if PUSH=1 is set
  bash -c "test $\{PUSH:-0\} = '1' && podman manifest push {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG} {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG} || true"
deps =
  ansible-builder
passenv =
  EXTRA_OPTS
  CNT_NAME
  TARGET_CONTAINER_TAG
  HOME
  # all below needed by container engines
  CONTAINERS_*
  DOCKER_*
  PYTHON*
  SSH_AUTH_SOCK
  TERM
setenv =
  podman: PODMAN_OPTS="--jobs=4"
  CNT_NAME = {env:CNT_NAME:creator-ee}
  TARGET_CONTAINER_TAG = {env:TARGET_CONTAINER_TAG:x}

[testenv:lint]
description = Run all linters
commands_pre =
commands =
  pre-commit run -a
deps =
  pre-commit >= 2.16.0

[testenv:inspect]
description =
  Run container interactively
commands_pre =
deps =
commands =
  echo "Starting container, wait for login prompt."
  podman run -it {env:CNT_NAME}:{env:TARGET_CONTAINER_TAG} /bin/bash
